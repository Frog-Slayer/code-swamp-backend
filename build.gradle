plugins {
	id 'java'
	id 'org.jetbrains.kotlin.jvm' version '1.9.25' apply(false)
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25' apply(false)
	id 'org.springframework.boot' version '3.4.5' apply(false)
	id 'io.spring.dependency-management' version '1.1.7' apply(false)
}

allprojects {
	group = 'dev.codeswamp'
	version = '0.0.1-SNAPSHOT'

	repositories {
		mavenCentral()
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}
}


subprojects {
	apply plugin: "org.jetbrains.kotlin.jvm"

	dependencies {

		implementation 'org.jetbrains.kotlin:kotlin-reflect'

		implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'
		implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.19.0'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.19.0'

	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	kotlin {
		compilerOptions {
			freeCompilerArgs.addAll("-Xjsr305=strict")
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

def springModules = [
        ":services:article-command",
		":services:article-projection",
        ":services:article-query",
        ":services:auth-service",
        ":services:user-service",
        ":services:image-service",
		":shared:common-auth",
		":shared:common-framework",
        ":shared:infra-kafka",
]

configure(springModules.collect { project(it)}) {
	apply plugin: "org.jetbrains.kotlin.plugin.spring"
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}